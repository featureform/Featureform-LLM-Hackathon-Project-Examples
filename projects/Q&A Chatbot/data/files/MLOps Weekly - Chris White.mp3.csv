Number;Speaker;Start time;End time;Duration;Text
0;Simba Khadder;00:00:06.300;00:00:20.940;00:00:14.640;"Hi, I'm Simba Khadder and you're listening to the MLOps weekly podcast. Today I'm going to be speaking with Chris White, the CTO of Prefect. Chris began his journey into data tooling while he was getting his PhD in mathematics at the University of Texas at Austin."
1;Simba Khadder;00:00:21.640;00:00:35.350;00:00:13.710;"He then became a data science manager at Capital One and joined Prefect as the first employee in 2018. Chris has been a teacher, a researcher, a data scientist, a software engineer, a sales engineer, and a security officer, just to name a few things."
2;Simba Khadder;00:00:35.600;00:00:43.620;00:00:08.020;"These experiences feed into his leadership at Prefect. He's a fellow surfer, so it was good to run into each other in the data space. Chris, it's so great to have you on the show today."
3;Chris White;00:00:44.260;00:00:45.900;00:00:01.640;"Yeah, thanks for having me. Happy to be here."
4;Simba Khadder;00:00:46.700;00:00:53.080;00:00:06.380;"I know I just gave a little brief bio of yourself, but I'd love to hear in your words, what was your journey to get to Prefect today?"
5;Chris White;00:00:54.900;00:01:17.150;00:00:22.250;"So a little long and circuitous, but starts basically when I was in grad school. I got my PhD in math at UT Austin under Rachel Ward, and the work that we were doing was definitely theoretical. It was pure math, but it was related to signal processing, compressed sensing, and optimization."
6;Chris White;00:01:17.480;00:01:38.200;00:00:20.720;"It was right around the time when a lot of people were leaving academia to go into finance and machine learning. Of course, I got a little interested, and our work was very related to a lot of the research going into that. Started coding a little bit more, getting in the weeds there, and then doing some consulting for various..."
7;Chris White;00:01:38.190;00:01:50.950;00:00:12.760;"Did some algorithms consulting, did some actual just managing and munching data. Just got interested in that. One of the things that I struggle with a lot when I was finishing up my PhD was whether to go industry or academia. That's the big question."
8;Chris White;00:01:51.360;00:02:08.410;00:00:17.050;"I do really love math. I really love math research. I loved it all, but I did find myself gravitating towards just fire hoses of problems more than big picture research vision. Industry, especially at that time, was producing problems daily."
9;Chris White;00:02:08.460;00:02:26.870;00:00:18.409;"I made the switch and I went to Capital One as a data scientist. It was right when Capital One was doing their big cloud migration from on-prem servers to AWS. Also got a little lucky to be a part of all that. I got to see both worlds, the old world and the new world, and what were the pain points of doing that migration."
10;Chris White;00:02:27.280;00:02:46.280;00:00:19.000;"On day one, I was writing white papers, building predictive models, justifying those models to regulators, all of that fun, pure data science. But because of this transition that was happening, I ended up helping my team out a lot by just writing lots of tooling for these things. They were on new platforms they didn't fully understand, so I helped there."
11;Chris White;00:02:46.270;00:03:03.740;00:00:17.470;"I was teaching courses about some of this stuff, which is just really cool thing that Capital One lets people do. Anyway, long story short, I got deeper and deeper into actually just writing software that helped unlock efficiencies in data teams, which either is data science or business analysts or data engineers."
12;Chris White;00:03:03.920;00:03:19.110;00:00:15.190;"By the time I left Capital One, I was on a team that was building a platform that connected data scientists and the finished models that they would build to business analysts who would then interact with those models with a Python SDK that we built on a platform that we maintained."
13;Chris White;00:03:19.460;00:03:36.060;00:00:16.660;"You can see the early seeds of the user experience that we care about at Prefect is like making sure that both highly technical users can get what they need out of it, but also making sure that people who aren't classically considered super technical can interact with it."
14;Chris White;00:03:36.160;00:03:54.960;00:00:18.800;"Anyways, during that time, got really involved in open source in the Python world, Dask in particular. That is how I ended up meeting Jeremiah, who's the founder and CEO of Prefect, and he hadn't started the company yet. He was just playing around with this idea. He used to be on the Airflow PMC. He was at the time when he was experimenting with this."
15;Chris White;00:03:54.960;00:04:09.550;00:00:14.590;"He had built this tool for himself because Airflow just wasn't meeting his needs. It wasn't scalable enough. The scheduler just fell over all the time. He needed a lot more ad hoc parametrized interactions with his workflows. That's a hallmark, I think, of data science is it's not really a batch thing."
16;Chris White;00:04:09.850;00:04:21.329;00:00:11.479;"It's just something happens. It could just be me wanting to run an experiment and I want to see the output through some parameters in. He had come across my desk work. He wanted to make sure dask founder-ledwas a first class citizen."
17;Chris White;00:04:21.360;00:04:37.650;00:00:16.290;"People could write highly scalable workflows. So we started pairing together a little bit. Next thing you know, he's like, Hey, I'm starting a company and I'd love for you to join as the founding engineer and made the switch. It was right when I was moving to California, too. Just a ton of things were changing."
18;Chris White;00:04:37.840;00:04:45.950;00:00:08.110;"That's always a little scary, but definitely never looked back. It was an awesome decision. It's been a fun, wild ride ever since."
19;Simba Khadder;00:04:46.240;00:05:01.900;00:00:15.660;"That's awesome. It's so interesting to me to see. There's a handful of companies, Capital One being one of them, not one people think of as really tech forward. But I know, and you obviously know, some of these companies are really good at this stuff. They've been doing it forever."
20;Simba Khadder;00:05:01.890;00:05:17.170;00:00:15.280;"They have a lot of resources invested in doing data science and machine learning well. Arguably, their problem space is even harder. You said regulators, I know what goes into that. We have users who we have to deal with that stuff, and it's not easy."
21;Chris White;00:05:18.350;00:05:38.680;00:00:21.040;"I have a theory about Capital One, actually. One of those things that surprises people, Capital One is still founder led. Rich Fairbanks was the founder of the company and is still the CEO. I think that really translates to the culture that they have where he still just cares a lot about what he's doing. It's not just a CEO job to him."
22;Simba Khadder;00:05:38.900;00:05:54.430;00:00:15.530;"I didn't know that either. I know they're relatively new compared to the banks, obviously. JP Morgan is a strong guy. But yeah, that makes sense. I think this is true. There's a lot of companies I learned recently about Intuit's founders, the CEO."
23;Chris White;00:05:54.980;00:06:00.250;00:00:05.270;"Interesting. Yeah, and I hear Argo came out of Intuit, right?"
24;Simba Khadder;00:06:00.250;00:06:16.800;00:00:16.550;"There's a lot of these companies that... I guess in that case, the CEO is also technical. It's not what you'd expect, but it does dramatically shift culture when leadership remembers those days and remembers building it up. That's crazy. That's cool."
25;Simba Khadder;00:06:17.040;00:06:30.200;00:00:13.160;"What do you think the biggest shift has been from being in the belly of the machine in a couple of months, like being the first employee at a small startup, which obviously is not much bigger?"
26;Chris White;00:06:30.220;00:06:55.840;00:00:25.620;"Yeah. You learn a lot quicker just because you have to. There's just a lot of stuff happening and you have to move quickly. I think probably the biggest thing, though, is the ambiguity that you have to face day to day in a startup. Even if you're an engineer and not necessarily a leadership, there's an infinite number of things you could probably do, and all of them are not very well specified."
27;Chris White;00:06:56.180;00:07:09.530;00:00:13.350;"They all require a little bit of intuition and just navigating that, whether it's prioritizing something, picking the right design for something, whether or not to introduce a feature that a user request because you don't know if that shifts what your product focus is."
28;Chris White;00:07:10.220;00:07:26.270;00:00:16.050;"All of that stuff is not stuff you really have to deal with when you're in a larger company. All of the initiatives get handed down to you. Maybe your team, you get obviously some creativity, but with this, it's like the world is your oyster. You can technically do anything."
29;Simba Khadder;00:07:26.660;00:07:42.550;00:00:15.890;"It's a really good point. I remember because I've been the found...This second company. I've been the founder for longer than I haven't been the founder in terms of my career. I'm still used to ambiguity, but it almost took a while for me to understand why you wouldn't be, why that's hard."
30;Simba Khadder;00:07:43.100;00:07:52.120;00:00:09.020;"I had to actually learn how to think from the perspective of someone who doesn't crave that. When I saw them do it, I'm like, cool, that's opportunity. I'm going to run that way."
31;Chris White;00:07:53.630;00:07:54.130;00:00:00.500;"Exactly."
32;Simba Khadder;00:07:54.220;00:07:55.840;00:00:01.620;"But it's definitely a..."
33;Chris White;00:07:55.840;00:07:56.820;00:00:00.980;"It stresses some people out."
34;Simba Khadder;00:07:56.830;00:08:16.980;00:00:20.150;"Yeah, it does. I think it stresses everyone out until you get used to it and you start to think differently. I'm very North Star oriented. What are we trying to do here? That this frame every problem that's positioned. If we don't know what to do, well, what seems like it's like making our North Star's aims that are North Star. Let's just do that and then we can figure it out later if we're wrong."
35;Chris White;00:08:17.540;00:08:31.710;00:00:14.170;"I think that part too is really key. I always like to talk about this as being comfortable just being wrong and knowing that when you're making a decision, it doesn't have to be completely right. It just has to be directionally correct."
36;Chris White;00:08:31.710;00:08:46.500;00:00:14.790;"That's usually enough so that you can make some progress, iterate on it later, figure out if it was wrong, retrace your steps, but you just have to get comfortable with that. One of the things I always tell our engineers and it's in our tech standards, just saying I don't know is important. Say it all the time. It's okay."
37;Simba Khadder;00:08:47.380;00:09:03.880;00:00:16.500;"I think it's funny, even you saying that, because I'm so used to, as a founder, you're wrong most of the time. It's something you're completely used to. It's almost like when you write too many times, I've had this happen where I'm like, everything's going well, and that's freaking me out."
38;Chris White;00:09:05.460;00:09:07.500;00:00:02.040;"Right. This can't be true."
39;Simba Khadder;00:09:08.100;00:09:12.750;00:00:04.650;"Yeah. It's like the house is too quiet. Where are the kids? Where's the dog?"
40;Chris White;00:09:13.870;00:09:16.730;00:00:02.860;"Right. There's no birds outside. What's going on?"
41;Simba Khadder;00:09:16.890;00:09:30.100;00:00:13.210;"Yeah, exactly. Let's really get back into orchestration. You mentioned Jeremiah was already working on Airflow. Orchestration is not a new problem. Arguably, the most used orchestrator in the world is Kron."
42;Simba Khadder;00:09:32.900;00:09:42.980;00:00:10.080;"Maybe first, could you describe the problem space and also maybe define why is it hard? Why are there so many orchestrators? Obviously, the problem is hard to solve, but I don't think it's obvious to everyone why."
43;Chris White;00:09:44.010;00:10:00.080;00:00:16.070;"Yeah. It's it's tricky. Orchestration, just as a word, I don't think actually defines the space at all. Easy example there. Kubernetes is a container orchestrator. But Kubernetes is not competitive with Prefect. We run everything on Kubernetes. Our users do, too. It's great."
44;Chris White;00:10:00.080;00:10:24.710;00:00:24.630;"Orchestration is just about managing the life cycle and dependencies of some unit of compute. Kubernetes cares a lot about compute resources and container run times and scheduling those from a resource perspective, restarting them if something is going on, checking in on their health in various ways and giving you ways to configure all of that."
45;Chris White;00:10:24.880;00:10:34.990;00:00:10.110;"I think that is one of the things that makes the space challenging is defining your world and how you're going to approach it is really hard because you could theoretically do anything."
46;Chris White;00:10:36.220;00:10:52.360;00:00:16.140;"I think another part of orchestration and one of the reasons I don't always think of Kron exactly as an orchestrator, although I know people do, is that especially nowadays, it's a lot about glueing together dependencies between lots of systems and getting observability into all of those interactions."
47;Chris White;00:10:52.620;00:11:05.420;00:00:12.800;"Kron only knows about a single, basically a CLI entry point and it doesn't know anything about dependencies or anything else that's all baked into your code. It doesn't help you remove any code related to that."
48;Chris White;00:11:05.640;00:11:29.470;00:00:23.890;"I think an orchestrator does somehow help you remove trigger logic for when this thing should run, makes that really easy, helps you manage the fact that this should always run after this. See that dependency enforced in a dashboard somewhere, and then just glueing together all of these different runtime environments or tools or APIs or web hooks, whatever it is that you happen to be gluing together."
49;Chris White;00:11:29.480;00:11:50.670;00:00:21.190;"That's where orchestrators live. But like I said, that's just such a huge space but that's what makes it hard. I think the thing that people get wrong a lot of the time in orchestration is, and one of the reasons I think there's so many tools in this space right now is they misidentify the output of a workflow as the thing being orchestrated."
50;Chris White;00:11:51.500;00:12:15.410;00:00:23.910;"For example, I see people call themselves a data orchestrator. If you look at it, the only thing they're governing is some piece of Python logic. That's not orchestrating data because you don't have full control over that data. It's just an output of the workflow. I think that can be really misleading, I think, to users because they probably get more confidence than they should in what the tool is actually doing."
51;Chris White;00:12:15.880;00:12:38.610;00:00:22.730;"I think that's one of the things that we just really lean into. If you go read anything that we produce, we always talk about how open ended we try to keep the system. It's really about orchestrating Python run times, functions, scripts, containers, even. It just so happens that Python is one of the most popular tools for everything involved with data."
52;Chris White;00:12:38.810;00:12:52.620;00:00:13.810;"Obviously, a lot of our hooks and everything are geared towards data practitioners, data engineers and data scientists, all of our precast, et cetera. But we still, at the end of the day, think of ourselves as a Python orchestrator, and that's our universe."
53;Simba Khadder;00:12:52.620;00:13:15.110;00:00:22.490;"I really like that you mentioned lifecycle. I think that's a key point here. We could be considered an orchestrator. Some people are like, Oh, you're not an orchestrator. I mean, if it helps your mental model, we're an orchestrator plus metadata specifically focused on the feature engineering lifecycle. That's the crucial part."
54;Simba Khadder;00:13:15.110;00:13:40.320;00:00:25.210;"It's more you choose your life cycle and like you said, if you pick your life cycle, there are things that you know to be true. In our world, we know that features are used for training and for inference. We can shortcut and abstract away some of the generic logic of making that happen. That's where we become more valuable. I think that's what you're getting at. Is that fair? Is that what you're saying?"
55;Chris White;00:13:40.320;00:13:56.580;00:00:16.260;"Yeah, it's 100 % fair. Then when you do that, when you're in, for example, the feature engineering space, it's important to connect it to the fact that it gets used in these models or whatever the case may be. But you wouldn't call yourself a model orchestrator because that's where your governance crosses some boundary."
56;Chris White;00:13:56.590;00:14:18.220;00:00:21.630;"All you can do now is observe what happens afterwards. Another way that I like to think about it is, what code does that tool let you avoid writing? That's another thing, the reason I think data orchestration, when I see some people calling themselves that, I don't think quite makes sense because you're still writing just as much code about your data."
57;Chris White;00:14:18.220;00:14:24.500;00:00:06.280;"It's your Python runtime that might get cleaned up a little bit. You're not really orchestrating data."
58;Simba Khadder;00:14:25.410;00:14:31.600;00:00:06.190;"Just to be super clear in the Prefect case, what is the code that they wouldn't be writing a user of Prefect?"
59;Chris White;00:14:31.740;00:14:49.700;00:00:17.960;"Yeah. It's anything at all related to operationalizing and tracking that code over time. Starting with where does the code even live? It's in this GitHub repository on this branch. That's the thing I care about. I want to schedule it to run at these times."
60;Chris White;00:14:50.200;00:15:04.290;00:00:14.090;"With each of those runs, I want these parameter values to get passed. I want to track those values in that configuration that got passed. I want it to sometimes run maybe in this remote cluster, sometimes on my left laptop and I want to know which runs ran in those different places."
61;Chris White;00:15:04.360;00:15:18.800;00:00:14.440;"I want to make sure that it's more resilient than maybe you could have written. For example, just like restarting it if the process dies or if Kubernetes[inaudible 00:15:12] a pod or something like that. That's more things. You have to write something bigger than Kubernetes to tap into."
62;Chris White;00:15:18.800;00:15:36.600;00:00:17.800;"Our agent will manage that for you. Then I think a big piece of it is all of the observability that comes with this. You have code, you want to put it in the world and you want to confirm that it's doing the things that you expect it to do within the time frames or SLAs that you care about."
63;Chris White;00:15:36.660;00:15:51.750;00:00:15.090;"That can get tricky really quickly. All of the logs you have to ingest, you have to go to search them, correlate them with errors, look at tracebacks, just get alerts if schedules are delayed, and all of that stuff is something I always talk about is like emergent complexity."
64;Chris White;00:15:51.820;00:16:05.130;00:00:13.310;"Each individual slice of that feels easy, but after four months of building that system, all of a sudden you get all these feature requests and things and all you're doing now is building an orchestration system. You're not doing data engineering anymore."
65;Simba Khadder;00:16:05.540;00:16:14.710;00:00:09.170;"Yeah. You all decided to go open source, but it also solves the problem of, well, if you have something we don't do, you can always contribute it. But chances are we don't do it."
66;Chris White;00:16:14.790;00:16:15.180;00:00:00.390;"Exactly."
67;Simba Khadder;00:16:15.180;00:16:33.870;00:00:18.690;"Like you said, you're not a data orchestrator, you're a Python runtime orchestrator. You mentioned one of the key differences in thinking of those two things is observability. What is the key differences and thinking of yourself, what does that allow you to do being a Python runtime orchestrator versus a data orchestrator?"
68;Chris White;00:16:35.670;00:16:51.030;00:00:15.360;"I don't think there is a true... I think maybe DBT is the closest thing to a data orchestrator where it actually helps you track these dependent SQL statements that you're writing and how all of the pieces fit together. But data..."
69;Chris White;00:16:52.000;00:17:09.530;00:00:17.530;"This gets, I guess, into a lot of different things. I don't even think data orchestration is really a thing that anyone is doing at all right now. I think it's a really hard problem. In order to really do it, you have to gain some amount of control over data sources, sinks, and all of the different databases that people are using."
70;Chris White;00:17:09.530;00:17:25.500;00:00:15.970;"That's just a hard platform problem to solve and to get people to buy into. What focusing on being just a Python function orchestrator allows us to do is first and foremost satisfy a million different use cases."
71;Chris White;00:17:26.380;00:17:44.960;00:00:18.579;"We have people who use our product for just replacing Airflow, standard ETL, batch jobs, just scheduling that stuff, to data scientists doing ML ops type of work where they're doing some basic experiment tracking, lots of really ad hoc job runs."
72;Chris White;00:17:45.230;00:18:04.560;00:00:19.330;"Totally different paradigm, running in these really large, oftentimes, DAS clusters and increasingly array clusters and managing that. That's just a scale that a lot of other data orchestrators don't really satisfy because data doesn't typically break down into 200,000 units the way a data science job might."
73;Chris White;00:18:04.920;00:18:19.430;00:00:14.510;"Then we also have people who use us for lots of random other things. We have some people who have used us for CICD. Why not? We manage dependencies between jobs and alert you on failure. That's a lot of what CICD is. We have other people who..."
74;Chris White;00:18:19.430;00:18:34.270;00:00:14.840;"We have one customer who set us up as this automated onboarding workflow system for employees. I don't totally understand it. I haven't seen the code, but it's just a business use case. It's not anything else and that's okay."
75;Chris White;00:18:34.270;00:18:44.680;00:00:10.410;"Bread and butter, definitely data engineering, data science, focusing on just a generic Python structure gives us the opportunity to satisfy all of these other things, which is really cool."
76;Simba Khadder;00:18:45.400;00:18:58.110;00:00:12.710;"That's really interesting. I think that really highlights it. I think it's mostly the last one, the onboarding tool. That's not in any way a data. It's truly just an orchestration problem. It's just defining the workflow."
77;Chris White;00:18:58.520;00:19:19.040;00:00:20.520;"On that point, I think to just separate us a little bit more, a data orchestrator, most likely, is going to make an assumption that all of your tasks, or whatever they call them, have outputs. That already puts you in a different world, whereas this onboarding tool, I'm not totally sure if it has outputs."
78;Chris White;00:19:19.050;00:19:26.460;00:00:07.410;"I think it's just a check mark that the run is associated with this person and you go through a sequence of tasks, but they don't necessarily have outputs. They just succeed or they don't."
79;Simba Khadder;00:19:27.120;00:19:42.830;00:00:15.710;"Interesting. That makes a lot of sense. I know talking to you, [inaudible 00:19:32] , I know it's more of a hack together way to do it that people have been doing for a while. Airflow is... I know it's very big. It's not super old, but it's not new."
80;Chris White;00:19:42.830;00:19:46.040;00:00:03.210;"It's pretty old. It's almost a decade old at this point."
81;Simba Khadder;00:19:47.700;00:20:02.050;00:00:14.350;"I guess my question is, why now with Prefect? Did something change or was it more of just took this long until someone actually built a better system? Or did something happen recently that you think drove the need for something like Prefect?"
82;Chris White;00:20:02.340;00:20:21.000;00:00:18.660;"That's a really good question. I don't think that there's a really specific event necessarily. I think one of the big challenges that we observed, at least when we started Prefect, was this two different worlds were happening."
83;Chris White;00:20:21.000;00:20:39.570;00:00:18.570;"There's a data engineering world using Airflow, and then there's the data scientist world that had just tons of custom stuff around all of their model builds and how they tracked all of that. Bridging that gap so that both teams, if they were on separate teams, maybe could speak the same language and talk about the tool in a common way."
84;Chris White;00:20:39.730;00:21:03.300;00:00:23.570;"Then actually share code with each other that connects those different pipelines in a meaningful way. I would just say that need was one of the motivating needs that we started with when we were building these things. Then also letting people manage their compute environment just more than Airflow does."
85;Chris White;00:21:03.310;00:21:22.500;00:00:19.190;"I'm trying to think of an example, just where your tasks run and who has the authority to manage those dependencies is something that Airflow takes a very firm ownership approach over, which means the scheduler becomes the bottleneck for anything that you want to do."
86;Chris White;00:21:22.560;00:21:33.080;00:00:10.520;"Whereas in our world, we will let you configure things called task runners that will say, Okay, that now can manage the dependency. Our Scheduler doesn't need to get involved and then that's how you can start to scale up."
87;Chris White;00:21:33.160;00:21:48.450;00:00:15.290;"You say, Oh, I have a desk cluster. I want to run 100,000 things on it, and I want to see each one of those things in the UI. Easy to do. We hand over control of desk and just make sure everything's coming home. Just scale and then bridging those worlds is I guess my short answer."
88;Simba Khadder;00:21:48.740;00:22:01.640;00:00:12.900;"I wonder if that bridge... The bridge is interesting because there is also a new rise, obviously, in MLOps, and that's driven by ML going outside of just a research group in the corner and -"
89;Chris White;00:22:03.130;00:22:04.640;00:00:02.400;"It's maturing into a real thing."
90;Simba Khadder;00:22:05.340;00:22:25.860;00:00:20.520;"Yeah. We're like now, every team has a data scientist. It's not a weird thing to have a data scientist on a product team. I guess that gets me to another question. I've seen Prefects show up on some of those MLOps clouds. I've seen you on DataOps clouds. Maybe I'll see you on the HR cloud one of these days based on that use case."
91;Simba Khadder;00:22:26.700;00:22:34.540;00:00:07.840;"I know you don't necessarily fit directly into one, but I'd love to hear how you think about the categorization of Prefect."
92;Chris White;00:22:34.740;00:22:52.780;00:00:18.040;"I genuinely think that we fit into all of those categories in the sense that if a user is using Prefect in that context to solve a problem, then in a very real sense, we do become an MLOps solution."
93;Chris White;00:22:52.840;00:23:05.950;00:00:13.110;"There are ways that you can use us in that way and we support it. I think there's a future state in which we do create a little bit more specialization so that the dashboards become a little bit more meaningful and you don't have to set up so much metadata."
94;Chris White;00:23:06.900;00:23:19.400;00:00:12.500;"Just going back to the Python thing, I joke that we're a Python ops tool. Because people write machine learning in Python a lot, we become an MLOps tool because people manage data pipelines, we become the DataOps tool, etc."
95;Chris White;00:23:20.240;00:23:32.210;00:00:11.970;"I think on those two categories, there's something that, especially whenever we set up this conversation, everything that I was thinking a lot about is just MLOps versus DataOps. What do those two even categories mean?"
96;Chris White;00:23:32.300;00:23:51.130;00:00:18.830;"MLOps, I think, is relatively clear. It is all about managing the lifecycle of a model ,build, and deployment. From experimentation, ingestion of data, tracking all of your training, to deploying it somewhere that it can actually be used, and then making sure that your inputs aren't drifting over time."
97;Chris White;00:23:51.140;00:24:20.340;00:00:29.200;"It's a very well defined world. It's a lot of stuff, of course, and it's a closed world in the sense that you own the inputs and can manage everything about it. Whereas DataOps is such a huge category and it's a completely open system. What I mean by that is, the data that comes into your universe starts out, you can't control that at all. It's completely out of your control."
98;Chris White;00:24:20.400;00:24:32.590;00:00:12.190;"Then how people interact, like when you're in a machine learning world, you have a finite list of tools and places you're going to run stuff. You might need GPUs or something like that. You're always over here running in that place where people can track costs."
99;Chris White;00:24:32.590;00:24:50.850;00:00:18.260;"With DataOps, there's a million and one different way to, for example, get access to a database, run a query, get the output of that query and do stuff with it. You might not go through your platform and actually just connect directly to your database, download the results as a CSV, and now they're outside of the scope of anything."
100;Chris White;00:24:51.920;00:25:05.760;00:00:13.840;"It's such an open system that I think DataOps becomes a really hard category to both define and ever have a tool that owns it in any way. Whereas MLOps obviously has an explosion of tools in it."
101;Simba Khadder;00:25:05.760;00:25:28.930;00:00:23.170;"It's funny. I have a very similar view. I actually think that the accepted view, like the more common view... Well, there's two common views I see. One is that there are two separate things. One is that MLOps is actually a subset of DataOps. But I had Stefan on the show a little while back now and he was like, DataOps is a subset of MLOps."
102;Simba Khadder;00:25:29.480;00:25:33.200;00:00:03.720;"I think it was a little bit of just exaggering."
103;Chris White;00:25:33.190;00:25:34.190;00:00:01.000;"Just for a take, yeah."
104;Simba Khadder;00:25:34.190;00:25:51.240;00:00:17.050;"But I think what you're saying is probably closer to true, and I think what he was getting at, which is going back to the lifecycle comment you made, there is an ML lifecycle versus a data lifecycle. But it's really dependent on use case."
105;Simba Khadder;00:25:51.240;00:26:09.410;00:00:18.170;"It almost feels like it should be AnalyticsOps and MLOps and that thing. DataOps is a more generic layer, but it also is so generic, but it's almost not really a defined problem. It's just generic plug ins, but maybe MLOps tools and then AnalyticsOps tools should use."
106;Chris White;00:26:10.210;00:26:30.700;00:00:20.490;"Yes, exactly. One of the things that we're doing to try to... I don't want to say we're going into the DataOps, but people already think that we're in DataOps. But to try to address this open endedness of that system is we have this concept of a spectrum, the coordination spectrum is what we call it."
107;Chris White;00:26:30.690;00:26:49.710;00:00:19.020;"It goes from orchestration where you actually own critical state of a workflow, maybe it's its schedule, maybe it's the outputs of it, whatever the case, the code itself. Then you control that to the observability side where you're very much a passive consumer of information and you just organize that information in intuitive, interesting ways."
108;Chris White;00:26:49.820;00:27:19.230;00:00:29.410;"Then you can connect these two things. You can say, whenever I observe or don't observe these things, then do this stuff, which then puts you on the orchestration side. The reason I'm talking about that is one of our goals here is for people to have basically endpoints where they can send information like time series, things that are happening in their data stack and be able to see it side by side with a lot of the running manage processes in the orchestration layer."
109;Chris White;00:27:19.260;00:27:38.790;00:00:19.530;"We've designed the schema and everything to be very open ended. You can just, for example, say, this query is being run by this person on this database in this table. Now this query, you could just fire hose that stuff at us, will then put together a world view of like, Oh, so you have this database and it has these tables and these users interact with those tables."
110;Chris White;00:27:38.790;00:28:04.800;00:00:26.010;"Here it all is for you. Maybe one of your workflows starts failing and then you can see, Oh, this user ran a really long running query right before that workflow failed. Let me reach out to them and see if they did something weird or let me go look at the query or whatever. But having this Observability API is what we're calling it. We're trying to just help people organize a lot of this open endedness in one centralized place."
111;Simba Khadder;00:28:05.020;00:28:11.780;00:00:06.760;"Would you say that in general, you orient towards keeping the API simple or adding more functionality?"
112;Chris White;00:28:12.340;00:28:31.770;00:00:19.430;"Yeah, we try really hard sometimes to a fault, to keep the API as always just building blocks and then clients then have to implement logic on top of them. So our UI, for example, will patch together four different endpoints just to create a restart button or something like that. It's just a design bias that we have."
113;Simba Khadder;00:28:31.860;00:28:53.430;00:00:21.570;"What makes sense. I almost predicted that you were going to say that just based on what you said because I know it's a very different company, but I get air table vibes. It's almost like a spreadsheet is this generic abstraction. If you did it really well, a lot of use cases could just use it. You don't need a specialized tool for everything."
114;Simba Khadder;00:28:53.500;00:29:04.330;00:00:10.830;"In your case, it's like, hey, this idea of an orchestrator, I know an orchestrator is not a well defined thing, but Python orchestrator and a framework in Python to define things and have things run."
115;Simba Khadder;00:29:04.840;00:29:22.020;00:00:17.180;"That's, if done well, is general enough where it solves such a wide variety of problems that if you do it simple or have been finding some very overly customized tool for the job, just use Prefect and make it work for you. Is that a fair take away?"
116;Chris White;00:29:22.600;00:29:32.440;00:00:10.020;"Hundred percent fair. That's the way that we always even try to pitch it is that we can grow with your use cases and with your team's focus. You don't have to worry too much about that lock in."
117;Simba Khadder;00:29:32.860;00:30:00.660;00:00:27.800;"This is super fascinating. I personally learned a lot from this. I think I would have definitely been guilty of calling Prefect a DataOps tool before this conversation. I'd love to end, let's say, if you had someone listen to this like me where, this is awesome, where like, I need to go tell my team about this. They need to go give a two sentence tweet pitch, whatever. What do you think the tweet l ave take away of this conversation should be?"
118;Chris White;00:30:01.360;00:30:18.440;00:00:17.080;"Oh, wow. This is the most challenging question that you've asked because I'm terrible at Twitter and I talk a lot if you haven't noticed. I think if you, anyone who finds themselves wanting to operationalize some Python code should check us out."
119;Chris White;00:30:18.740;00:30:40.980;00:00:22.240;"One of the things, this is getting away from tweet link, but one of the things that we have really focused on in our 2.0 push is this idea of incremental adoption. What I mean by that is how much Prefect code you should have to write, care about, and the concepts you need to know should be proportional to how complicated of a use case or sub linear even and how it scales with it."
120;Chris White;00:30:41.030;00:31:01.220;00:00:20.190;"One thing that you can use Prefect for is, if you're already running a script on Kron, you can drop one line code change that just decorates your main entry point function, and now you just have a dashboard that you can use to look at to see what your failures are, when your thing is running, when it's succeeding, etc."
121;Chris White;00:31:01.220;00:31:11.480;00:00:10.260;"You already now get a little bit of metadata with a fun dashboard on top of it all just using the open source. You don't have to stand up any infrastructure to do this. It's all happening for you."
122;Simba Khadder;00:31:11.890;00:31:15.990;00:00:04.100;"Layering Observability, essentially, on top of an existing orchestrator."
123;Chris White;00:31:16.000;00:31:27.410;00:00:11.410;"Exactly. Then next thing you know, you're going to want to layer in some retries, and now you're starting to move into the Prefect world. But it doesn't have to be data. Any type of Python code you're trying to operationalize."
124;Simba Khadder;00:31:27.410;00:31:33.270;00:00:05.860;"That's great. You have an open source repo, but I'll include the link to it so people can check it out."
125;Chris White;00:31:33.270;00:31:33.560;00:00:00.290;"Awesome."
126;Simba Khadder;00:31:33.560;00:31:38.420;00:00:04.860;"This has been great. Chris, thanks so much for hopping on with me today."
127;Chris White;00:31:38.460;00:31:40.660;00:00:02.200;"Yeah, thanks for having me. This was really fun."
