Number;Speaker;Start time;End time;Duration;Text
0;Speaker 1;00:00:06.010;00:00:42.740;00:00:36.730;"Hi, I'm Simba, Katherine, and you're listening to the MLS weekly podcast today. I'm chatting with Bernice Herman, a data scientist at YLabs who also holds a position at the University of Washington Esign Institute as a research scientist while also completing her PhD at YLabs. She uses aggregate statistics to collect data distributions for monitoring realtime machine learning systems. At UW, she does research on synthetic data and evaluation of machine learning models as well. Before joining YLab, she worked as a software developer on Amazon, working on models related to the inventory planning and control there. Bernice, so excited to have you on the show today."
1;Speaker 2;00:00:42.880;00:00:44.710;00:00:01.830;"Yes, thank you for having me."
2;Speaker 1;00:00:44.830;00:00:51.140;00:00:06.310;"So I like to start all these podcasts with the question what does ML Ops mean to you?"
3;Speaker 2;00:00:51.280;00:01:41.630;00:00:50.350;"Yeah, this was an interesting one. So simply put, I think ML Ops is about how do we think about the maintenance and the reliability of machine learnings beyond the initial creation? I think in machine learning, especially as a researcher in machine learning. The more academic side, academics certainly think about the creation of the model. You run your tests on it, you get some performance numbers, and then the model kind of ceases to exist. But when you move to production, you really need to think about how does this thing kind of how is it robust and reliable and how does it last for a long time. So I think of ML apps about that space. Of course, there are big parallels to DevOps, which is kind of a portmanteau of development and operations, and that's the same for the machine learning side of it."
4;Speaker 1;00:01:41.790;00:01:52.080;00:00:10.290;"Yeah. And actually it's funny you bring up the DevOps things. I'm curious to expand on that more. What do you see as kind of the parallels and the differences between MLS and DevOps?"
5;Speaker 2;00:01:52.230;00:03:08.590;00:01:16.360;"Yeah. So DevOps has a number of things, kind of continuous integration and deployment. You have things related to monitoring and kind of signals of service, up time and availability, that sort of stuff. And I think DevOps really has kind of two parts. One are these special tools to be able to continually have observability and kind of easy deployment of systems, but you also have just the organizational aspects of DevOps. If you have an organization that does that DevOps, you tend to think about the way software is developed very differently. I think Machine Learning Ops has all of those things, but I think that there are some additional requirements that you have to think about. So one big one that we talk a lot at Why Lab is about is that when you do DevOps, you normally can get away with really simple kind of metrics of things. So let's say you have some service and it's running in production. You care about a number of metrics, like very many things related to the percentage of uptime of the service. The latency you might even care about, like the volume of data that comes into the service purely from a DevOps perspective."
6;Speaker 2;00:03:08.710;00:03:43.350;00:00:34.640;"And I think Mlaps, the thing that gets added onto that is not only do you care about just those metrics, but you also care about the content of the data that you see. That's normally a thing you don't really have to care about for DevOps. You may log it, you may have some sense of Invalid inputs, but that's kind of it for any machine learning data or just data in general. Not only do I care about that, the data got there, I care about what's the distribution of that data is, the average value difference. So there's all of this kind of within the data stuff that you have to add on for ML apps."
7;Speaker 1;00:03:43.520;00:04:18.230;00:00:34.710;"So expanding on that a bit, we talk a lot about a lot of categories in ML apps. There's a lot of vendors in Mlaps. There's a lot of random example solutions out there. I personally feel like there isn't yet example of a canonical perfect ML Ops workflow. I can't personally think of one company that's like, this is perfect. This is exactly how everyone should do it. And I don't even know if it really exists a thing as a perfect M Ops workflow. But if it did or what's, I guess the closest you can get to like, what does it look like when MLOps is done right?"
8;Speaker 2;00:04:18.390;00:05:30.050;00:01:11.660;"Yeah, that's a great question. I mean, I will definitely take the same size that you're on. I think it's a hard thing to feel like I'm going to take the good side. You defend the perfect workflow. I definitely don't think that's the case. I do think that when people kind of get toward ML apps, they have a specific vision of the system in their head. Maybe it's their specific problem that they're working on that makes total sense or just kind of the things that you hear over and over again. So maybe, for example, if you're talking about future stores, you often get into the space of like, you have customer data. There's lots of different maybe parts of the organization or website that gives you different kind of aspects of the customer. You'll want to do some aggregation and have some sense of what's the current features for this customer and serve that. But I think that's one aspect of it and that makes total sense in some use cases. There are other aspects. So when I worked at Amazon, we were in the supply chain optimization team and our job basically was to decide how much of every Asan that wasn't third party vendors, millions of Ace being just products or SKUs."
9;Speaker 2;00:05:30.120;00:06:20.000;00:00:49.880;"Really. I think it's the best equivalent for Asin. But for every SKU, we want to decide how much should we have in stock at any time. So the problem is very different because I think unlike kind of customers or things like that, it was a lot more ephemeral. If I made a decision today about how much we should have in stock. I might buy some more in stock or decide to not buy some. But tomorrow I'm going to remake that decision. And I actually don't care about what I said yesterday. I just care about how much I have in stock. So I think if you have a very ephemeral system, maybe the world looks a little different and you don't need to store as much information. You need to be able to rerun information. If you have a system that has kind of a fixed cohort of people or like customers or things you have to predict, then you're going to want to store more information. So it really depends."
10;Speaker 1;00:06:20.150;00:06:46.750;00:00:26.600;"Yeah, it sounds like it's really dependent on the use case. I like to use the idea of self driving cars versus just like fraud detection, where they're both ML. They both need ML Ops. But the problem statement for a self driving car model is so different. It sounds like a lot of what you're saying. Also this like understand what your problem is and understand what part of the highest kind of value and just kind of focus on those first, then go from there. Is that fair?"
11;Speaker 2;00:06:46.870;00:06:53.720;00:00:06.850;"Yeah, I think that's fair. And I think that also feeds into the different components and tools that make up your system."
12;Speaker 1;00:06:54.110;00:07:43.310;00:00:49.200;"So a little maybe a different tangent. I'm curious about your background. You came actually from more of a statistics and math background. You're doing your PhD, you come from an academia background as well. It's interesting with Mlaps because it's kind of funny. You get people from both sides of it. I was an engineer before I came from a software engineering side, got into product ML, like building recommended systems, and then gone to ML Ops. So it's kind of like almost the other side. And so it was interesting for me to try to understand the difference in perspective and the kind of the different strains that come from each side. And I'm curious, from your perspective, how does coming from a statistics and math background compared to coming from a CS and software engineering background for MLS?"
13;Speaker 2;00:07:43.440;00:09:14.890;00:01:31.450;"Yeah. So I'll give a little background on kind of where it came from. So I as a kid even love statistics and business. I played a lot of sports, but outside of that, I spent a lot of time on business ideas. So when I was picking going to College and deciding where my career would go, the only thing I kind of knew based off of my family was being an actuary or an epidemiologist, someone who really does statistics. So for those who haven't heard of an actuary, they kind of create statistical models to measure uncertainty, often for insurance. But when I started that career, I realized that it's a very structured career. I moved to kind of financial engineering, and I worked at Morgan Stanley, a big investment bank, on the trading floor and doing research and both of those just felt very structured as a career and not very entrepreneurial. You work for a large company you kind of get cold and handcuffed in a way, especially for finance you make a lot of money but your skills get more and more focused and so you can't really apply them outside so I applied as a senior in College to software jobs and that was so hard I think as a person with a staff and math background at least at the time I took a number of programming classes you kind of have to even as a staff major but just the way of thinking about software engineering has goes well beyond being able to write some code so I remember being on the job at Amazon for the first time and there being a race condition I had no idea what a race condition is."
14;Speaker 2;00:09:15.010;00:09:59.890;00:00:44.880;"I'm used to writing some code and then it runs and then that being fine I never thought about threading I never thought about any of this stuff and so I think that part is certainly hard just kind of getting used to the way that you think about software when you have a formal background in that. I actually teach a class at UW that's called software design for data scientists because I really believe that you have to understand kind of some software patterns how code gets structured together to be a good data scientist Because you're going to be embedded on one of these teams. When someone asks you to write code code they're going to want it to work in a couple of months so that means you have to actually think about how to structure it for a long term. It's not a notebook necessarily that you can just kind of rewrite when you need to change it's."
